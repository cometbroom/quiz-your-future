{"mappings":"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","sources":["src/components/animations.js","src/components/navbar.js","src/constants.js","src/views/welcomeView.js","src/views/answerView.js","src/components/scoreKeeper.js","src/views/lastView.js","src/pages/pageAnimation.js","src/pages/lastPage.js","src/components/soundPlayer.js","src/pages/questionPage.js","src/views/questionView.js","src/pages/welcomePage.js","src/app.js"],"sourcesContent":["import { gsap } from 'gsap';\n\nlet intervalPlaceholder;\nconst opacityAdder = 0.02;\n\n//Set opacity of element to 0 and animate it to 1\nexport const opacityAnimation = (el) => {\n  el.style.opacity = '0';\n\n  intervalPlaceholder = setInterval(intervalMethod(el), 4);\n};\n\nconst intervalMethod = (el) => {\n  return () => {\n    let opacity = parseFloat(el.style.opacity);\n\n    opacity += opacityAdder;\n    el.style.opacity = opacity;\n    if (opacity >= 1) {\n      clearInterval(intervalPlaceholder);\n      return;\n    }\n  };\n};\n\nexport function SideAnimation() {}\n","import { CURRENT_QUESTION_DISPLAY_ID, HIGH_SCORE_DISPLAY_ID, INFO_UI_ID, TIMER_DISPLAY_ID } from \"../constants.js\";\nimport { quizData } from \"../data.js\";\nimport { opacityAnimation } from \"./animations.js\";\n\n//Navbar elements\nconst infoUI = document.getElementById(INFO_UI_ID);\nconst timerDisplay = infoUI.querySelector(`#${TIMER_DISPLAY_ID}`);\nconst questionDisplay = infoUI.querySelector(`#${CURRENT_QUESTION_DISPLAY_ID}`);\nconst scoreDisplay = infoUI.querySelector(`#${HIGH_SCORE_DISPLAY_ID}`);\n//Counter that take our timer's setInterval() method.\nlet timerCounter;\n\n//Navbar data which feed one-side to elements\nconst navData = {\n\tmins: 0,\n\tsecs: 0,\n\tscore: 0,\n\tqCurrent: 0,\n\tqMax: quizData.questionsToShow\n};\nconst getTimeFormatted = () => {\n\treturn (\n\t\t`${navData.mins.toString().padStart(2, '0')}:${navData.secs.toString().padStart(2, '0')}`\n\t);\n} \n\n/**\n * Gets score from navbar data.\n * @returns {number}\n */\nexport const navFinalScore = () => {\n\treturn navData.score;\n};\n\n/**\n * Sets score on navbar data.\n * @returns {undefined}\n */\nexport const setNavFinalScore = (amount) => {\n\tnavData.score = amount;\n}\n\n/**\n * Initialize the top bar info elements.\n * @returns {undefined}\n */\nexport const starterNavUI = () => {\n\ttimerDisplay.textContent = \"00:00\";\n\tscoreDisplay.textContent = \"\";\n\tquestionDisplay.textContent = \"\";\n};\n/**\n * Show navbar setup of last page.\n * @returns {undefined}\n */\nexport const lastPageNav = () => {\n\tscoreDisplay.textContent = \"\";\n\tquestionDisplay.textContent = \"\";\n\tlocalStorage.setItem(\"currentIndex\", quizData.questionsToShow);\n}\n/**\n * Initialize navbar and start timer\n * @returns {undefined}\n */\nexport const initInfoUI = () => {\n\t//Make the initial content with forEach loop\n\tconst initContent = [\n\t\t\"\", \n\t\t`${navData.qCurrent}/${navData.qMax}`, \n\t\tgetTimeFormatted()\n\t];\n\tinitContent.forEach((item, idx) => {\n\t\tinfoUI.children[idx].textContent = item;\n\t})\n\n\ttimerCounter = setInterval(() => {\n\t\t//Add seconds or minutes according to clock standard\n\t\tnavData.secs < 59 ? navData.secs++: (navData.mins++, navData.secs = 0);\n\t\ttimerDisplay.textContent = getTimeFormatted();\n\t}, 1000);\n}\n\n\n/**\n * Register the current question's index on the UI display\n * @returns {undefined}\n */\nexport const nextQuestionRegister = () => {\n\tnavData.qCurrent++;\n\tlocalStorage.setItem('currentIndex', navData.qCurrent - 1);\n\tquestionDisplay.textContent = `${navData.qCurrent}/${navData.qMax}`;\n}\n\n/**\n * Add to the user's score\n * @param {number} amount - Amount to add by.\n * @returns {undefined}\n */\n export const addToCurrentScore = (amount) => {\n\tnavData.score += amount;\n\t\n\tscoreDisplay.innerHTML = String.raw`\n\t<img src=\"./public/assets/img/plus.png\"><span>${amount}</span>\n\t`;\n\topacityAnimation(scoreDisplay);\n\tsetTimeout(() => {\n\t\tscoreDisplay.innerHTML = \"\";\n\t}, 800);\n}\n\n\n/**\n * Remove our UI infos and clear intervals.\n * @returns {undefined}\n */\nexport const removeUIInfos = () => {\n\ttimerDisplay.textContent = '';\n\tquestionDisplay.textContent = '';\n\tclearIntervals();\n}\n\n/**\n * Clear the set intervals for the navbar component.\n * @returns {undefined}\n */\nexport const clearIntervals = () => {\n\tclearInterval(timerCounter);\n}\n\n\nexport const getTimerFromNavbar = () => {\n\treturn (\n\t\t(navData.mins * 60) + navData.secs\n\t);\n}\n\nexport const getDataNavbar = () => navData;\n/**\n * Will only set the provided keys to navData object\n * @param {object} data - Data object to take similar props from.\n * @returns {undefined}\n */\nexport const setDataNavbar = (data) => {\n\tObject.keys(data).forEach(key => {\n\t\tnavData[key] = data[key];\n\t});\n}\n\n//Unload the navdata to localStorage\nwindow.addEventListener('beforeunload', () => {\n\tif (localStorage.getItem('currentIndex') != null) {\n\t\tlocalStorage.setItem('navData', JSON.stringify(navData));\n\t} \n});\n","'use strict';\n\n/*\n The constants file is used to store anything \n that multiple files use, that should ALWAYS be the same\n \n It is an industry standard to make these variables fully capitalised\n*/\n\nexport const USER_INTERFACE_ID = 'user-interface';\nexport const START_QUIZ_BUTTON_ID = 'start-quiz-button';\nexport const ANSWERS_LIST_ID = 'answers-list';\nexport const NEXT_QUESTION_BUTTON_ID = 'next-question-button';\nexport const RETURN_HOME_BUTTON_ID = 'return-home-button';\nexport const HINT_BUTTON_ID = 'show-correct';\nexport const NAVBAR_QUERY = 'section.navbar';\nexport const INFO_UI_ID = 'info-ui';\nexport const HIGH_SCORE_DISPLAY_ID = 'high-score';\nexport const CURRENT_QUESTION_DISPLAY_ID = 'current-question';\nexport const TIMER_DISPLAY_ID = 'timer-ui';\nexport const SCORE_KEEPER_ID = 'score-keeper';\nexport const SOUND_ICON_ID = 'soundIcon';\n\n","'use strict';\n\nimport { START_QUIZ_BUTTON_ID } from '../constants.js';\n\n/**\n * Create the welcome screen\n * @returns {Element}\n */\nexport const createWelcomeElement = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <h1 class=\"welcome-message\">Welcome</h1>\n    <button class=\"btn-primary\" id=\"${START_QUIZ_BUTTON_ID}\">start quiz</button>\n    <br>\n    <p class=\"welcome-phrase\">Anyone can tell the past..<br>but we're here to show you your future!</p>\n  `;\n  return element;\n};\n","'use strict';\n\n/**\n * Create an Answer element\n * @returns {Element}\n */\nexport const createAnswerElement = (answerText) => {\n  const element = document.createElement('li');\n  element.classList.add('answer-options')\n  element.innerHTML = String.raw`\n    ${answerText}\n  `;\n  \n\n  return element;\n};","import { getTimerFromNavbar } from \"./navbar.js\";\nimport { quizData,fortune } from \"../data.js\";\nimport { navFinalScore } from \"./navbar.js\";\n\nexport const score = {\n  question: 0,\n  total: 3,\n  finalScore: 0\n}\n\n/**\n * Calculates the score based on how quickly the user completes the quiz\n * @param {number} endScore - Number from 0 to inf\n * @returns {number}\n */\nexport const scoreMultiplier = (endScore) => {\n  let timeGiven = (quizData.questionsToShow * 30);\n  let multiplierCalculator = Math.floor((timeGiven - getTimerFromNavbar()) / 20);\n  let finalScore = endScore * multiplierCalculator;\n  if (finalScore<0) {\n    return 0;\n  } else {\n  return finalScore;\n  }\n};\n\n/**\n * Return user's fortune based on score\n * @returns {string}\n */\n export const returnFortune = () => {\n   //Logic to handle refreshing\n  if (fortune.selected !== null) return fortune.selected;\n\n  const rndInt = Math.floor(Math.random() * 3);\n  if (scoreMultiplier(navFinalScore()) < 100){\n    fortune.selected = fortune.bad[rndInt];\n  } else if (scoreMultiplier(navFinalScore()) < 200) {\n    fortune.selected = fortune.medium[rndInt];\n  } else {\n    fortune.selected = fortune.good[rndInt];\n  }\n  return fortune.selected;\n};\n\n/**\n * Create fortune html element\n * @returns {element}\n */\nexport const createFortune = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <p class=\"fortune\">\n      Fortune-teller says: \"${returnFortune()}\"\n    </p>\n  `;\n  return element;\n};","'use strict';\n\nimport { navFinalScore } from '../components/navbar.js';\nimport { scoreMultiplier } from '../components/scoreKeeper.js';\nimport { RETURN_HOME_BUTTON_ID } from '../constants.js';\nimport { quizData } from \"../data.js\";\n\n/**\n * Create the try again button\n * @returns {element}\n */\n export const createLastElement = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <button class=\"btn-primary\" id=\"${RETURN_HOME_BUTTON_ID}\">try again</button>\n    `;\n  return element;\n};\n\n/**\n * Create the high score display\n * @returns {element}\n */\nexport const createScoreElement = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <h4>Your Final Score is: ${scoreMultiplier(navFinalScore())}</h4>\n  `;\n  return element;\n};\n\n/**\n * Create an accordion element\n * @returns {Element}\n */\nexport const createAccordionToggle = () => {\n  const parent = document.createElement('div');\n  const element = document.createElement('h3');\n\n  parent.classList.add(\"qalist-wrapper\");\n  element.textContent = `Show the summary of questions`;\n  parent.appendChild(element);\n  return parent;\n}\n\n/**\n * Create summary of questions and answers element\n * @returns {Element}\n */\nexport const questionAndAnswerList = () => {\n  \n    const element = document.createElement('div');\n\n    quizData.questions.forEach(question => {\n        const liElement = document.createElement('p');\n        \n        if(question.selected !== null) {\n           liElement.innerHTML = String.raw`\n        <p class=\"qa-question\">Q: ${question.text}<span class=\"q-list-ending qa-answer\">A: ${question.answers[question.correct]}</span><p>\n        `;\n        element.appendChild(liElement);           \n      }     \n    })\n    return element;\n}\n\n/**\n * Create the footer with the links to the team's GitHub\n * @returns {element}\n */\nexport const createFooter = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <footer>\n      <p>\n      This project was actualized by the 'Quiz Your Future' team<br>\n      <a target=\"_blank\" href=\"https://github.com/cometbroom\">Ali</a>, <a target=\"_blank\" href=\"https://github.com/slymny\">Suleyman</a> and <a target=\"_blank\" href=\"https://github.com/EdwardAbboud\">Edward</a>.\n      </p>\n      <a target=\"_blank\" href=\"https://icons8.com/icon/49838/mute\">Mute</a> icon by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>\n      <a target=\"_blank\" href=\"https://icons8.com/icon/K0l4dwcsMaJa/plus\">Plus</a> icon by <a target=\"_blank\" href=\"https://icons8.com\">Icons8</a>\n    </footer>\n  `;\n  return element;\n};\n\n/**\n * Create the background to the final page\n * @returns {element}\n */\nexport const addFortune = () => {\n  const element = document.createElement('div');\n  element.innerHTML = String.raw`\n    <img class=\"fortune-img\" src=\"./public/assets/background-img/QYF-background.png\">\n  `;\n  return element;\n};\n\n","//Placeholder to get the ability to remove interval\nlet intervalPlaceHolder;\n\n/**\n * Will animate an array of elements\n * @param {Array} els - Array of elements\n * @param {string} target - Target style to animate, default is opacity\n * @param {number} changeBy - How much to change target style every 10 ms\n * @param {string} suffix - Suffix to apply when computed goes to style.\n * @returns {undefined}\n */\nexport const animateElements = (els, target = \"opacity\", changeBy = 0.05, suffix = \"\") => {\n\t//Initialize with 0\n\tels.forEach(el => {\n\t\tel.style[target] = \"0\";\n\t});\n\tintervalPlaceHolder = setInterval(() => {\n\t\tlet elementStyle;\n\t\t//For each element take the style, change, and feed back\n\t\tels.forEach((el) => {\n\t\t\telementStyle = parseFloat(el.style[target]);\n\t\t\telementStyle += changeBy;\n\t\t\tel.style[target] = `${elementStyle}${suffix}`;\n\t\t});\n\t\t//Break at 1.\n\t\tif (elementStyle >= 1) {\n\t\t\tclearInterval(intervalPlaceHolder);\n\t\t\treturn;\n\t\t\t}\n\t}, 10);\n}\n","'use strict';\n\nimport { USER_INTERFACE_ID, RETURN_HOME_BUTTON_ID } from '../constants.js';\nimport { createLastElement, createScoreElement, createAccordionToggle, questionAndAnswerList, createFooter, addFortune } from '../views/lastView.js';\nimport { initWelcomePage } from './welcomePage.js';\nimport { fortune, quizData } from '../data.js';\nimport { clearIntervals, lastPageNav, setDataNavbar } from '../components/navbar.js';\nimport { createFortune } from '../components/scoreKeeper.js';\nimport { animateElements } from './pageAnimation.js';\n\nconst userInterface = document.getElementById(USER_INTERFACE_ID);\n\n/**\n * Add our last page to userInterface\n * @returns {undefined}\n */\nexport const initLastPage = () => {\n  //Stop timer\n  clearIntervals();\n  quizData.currentQuestionIndex = 0;\n  lastPageNav();\n\n  userInterface.innerHTML = '';\n  const scoreElement = createScoreElement();\n  const fortune = addFortune();\n  const yourFortune = createFortune();\n  const lastElement = createLastElement();\n  const accordionToggleDiv = createAccordionToggle();\n  const qaList = questionAndAnswerList();\n  const footer = createFooter();\n  \n  userInterface.appendChild(fortune);\n  userInterface.appendChild(scoreElement);\n  userInterface.appendChild(yourFortune);\n  userInterface.appendChild(lastElement);\n  accordionToggleDiv.appendChild(qaList);\n  userInterface.appendChild(accordionToggleDiv);\n  userInterface.appendChild(footer);\n\n  //Animate all elements' individual opacity\n  animateElements([\n    scoreElement,lastElement,qaList,accordionToggleDiv,footer\n  ]);\n\n  document\n    .getElementById(RETURN_HOME_BUTTON_ID)\n    .addEventListener('click', restartQuiz);\n    //Event listener to toggle q&a list accordion\n  accordionToggleDiv.addEventListener('click', accordionToggled(qaList))\n};\n\n//Will toggle between 0 maxHeight and fit-content maxHeight\n//qaList can be any element\nconst accordionToggled = (qaList) => {\n  return () => {\n    if (qaList.style.maxHeight) {\n      qaList.style.maxHeight = null;\n    } else {\n      qaList.style.maxHeight = qaList.scrollHeight + \"px\";\n    }\n  }\n}\n\nconst restartQuiz = () => {\n  localStorage.clear();\n   //Clear selection on reset.\n  quizData.questions.map(q => {\n    q.selected = null;\n  });\n  fortune.selected = null;\n  setDataNavbar({\n    mins: 0,\n    secs: 0,\n    qCurrent: 0,\n    score: 0\n  });\n  initWelcomePage();\n  };","import { SOUND_ICON_ID, NAVBAR_QUERY } from \"../constants.js\";\r\n\r\nconst sounds = {\r\n\tcorrect: new Audio('https://cometbroom.github.io/quiz-your-future/public/assets/sounds/Negative_Bell_Bling_Game_Sound.wav'),\r\n\tbgMusic: new Audio('https://cometbroom.github.io/quiz-your-future/public/assets/sounds/background-music.mp3')\r\n}\r\n\r\nconst SOUND_ICON_ON = 'https://cometbroom.github.io/quiz-your-future/public/assets/img/soundon.png';\r\nconst SOUND_ICON_MUTE = 'https://cometbroom.github.io/quiz-your-future/public/assets/img/mute.png';\r\n\r\nsounds.bgMusic.volume = \"0.2\";\r\n\r\nconst soundIconElement = document.getElementById(SOUND_ICON_ID);\r\n//const navbarElement = document.querySelector(NAVBAR_QUERY);\r\n\r\n/*\r\nconst createSliderElement = () => {\r\n\tlet slider = document.createElement(\"input\");\r\n\tslider.classList.add(\"slider\");\r\n\tslider.type = \"range\";\r\n\tslider.value = \"0\";\r\n\tslider.id = \"sliderIcon\";\r\n\tslider.style.top = `${navbarElement.offsetTop + navbarElement.offsetHeight}px`;\r\n\tslider.style.left = `${soundIconElement.offsetLeft}px`;\r\n\tslider.addEventListener(\"change\", volumeHandler);\r\n\treturn slider;\r\n}\r\nconst sliderVolume = createSliderElement();\r\n\r\n*/\r\n/**\r\n * Will change the speaker icon according to argument\r\n * @param {string} what - String for switch statement e.g \"on\"/\"off\"\r\n * @returns {undefined}\r\n */\r\nexport const setSoundIcon = (what) => {\r\n\tswitch (what) {\r\n\t\tcase \"on\": soundIconElement.src = SOUND_ICON_ON; break;\r\n\t\tcase \"off\": soundIconElement.src = SOUND_ICON_MUTE; break;\r\n\t}\r\n}\r\n\r\n/**\r\n * Reset background music from start\r\n */\r\nexport const resetBgMusic = () => {\r\n\tsounds.bgMusic.currentTime = 0;\r\n}\r\n\r\n/**\r\n * Will change the speaker icon according to argument\r\n * @param {number} vol - Number from 0 to 1\r\n * @returns {undefined}\r\n */\r\nexport const setBgVolume = (vol) => {\r\n\tObject.keys(sounds).forEach(key => {\r\n\t\tsounds[key].volume = `${vol}`;\r\n\t});\r\n}\r\n\r\n/**\r\n * Play the sound for the correct question\r\n */\r\nexport const playCorrectQ =  () => {\r\n\tsounds.correct.currentTime = 0;\r\n\tsounds.correct.play();\r\n}\r\n\r\nexport let playBgMusic = () => {\r\n\tsetBgVolume(0.2);\r\n\tsetSoundIcon(\"on\");\r\n\t//Listen for ended sound to loop.\r\n\tsounds.bgMusic.addEventListener('ended', function() {\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.play();\r\n\t}, false);\r\n\tsounds.bgMusic.play();\r\n}\r\n\r\nexport const pauseBgMusic = () => {\r\n\tsounds.bgMusic.pause();\r\n\tsounds.correct.volume = 0;\r\n\tsetSoundIcon(\"off\");\r\n}\r\n/*\r\n//Called when vol slide changes\r\nfunction volumeHandler() {\r\n\t//Change all sounds volume\r\n\tObject.keys(sounds).forEach(key => {\r\n\t\tsounds[key].volume = this.value / 100;\r\n\t})\r\n\tif (this.value == 0) {\r\n\t\tsoundIconElement.src = SOUND_ICON_MUTE;\r\n\t} else {\r\n\t\tsoundIconElement.src = SOUND_ICON_ON;\r\n\t}\r\n}\r\n*/\r\n//Event listener for play and pause\r\nsoundIconElement.addEventListener(\"click\", function() {\r\n\tif (sounds.bgMusic.paused) {\r\n\t\tplayBgMusic();\r\n\t} else {\r\n\t\tpauseBgMusic();\r\n\t}\r\n})\r\n\r\n//Pause the music on refresh to avoid breaking autoplay rules\r\nwindow.addEventListener(\"load\", () => {\r\n\tpauseBgMusic();\r\n});\r\n","'use strict';\n\nimport {\n  ANSWERS_LIST_ID,\n  // NEXT_QUESTION_BUTTON_ID,\n  USER_INTERFACE_ID,\n  HINT_BUTTON_ID,\n} from '../constants.js';\nimport { createQuestionElement } from '../views/questionView.js';\nimport { createAnswerElement } from '../views/answerView.js';\nimport { quizData } from '../data.js';\nimport { initLastPage } from './lastPage.js';\nimport {\n  addToCurrentScore,\n  nextQuestionRegister,\n} from '../components/navbar.js';\nimport { score } from '../components/scoreKeeper.js';\nimport { playCorrectQ } from '../components/soundPlayer.js';\nimport { animateElements } from './pageAnimation.js';\n\n//Check if correct answer is selected\nlet isCorrectAnswerSelected = false;\n\n/**\n * Initialize our question page with current data\n * @returns {undefined}\n */\nexport const initQuestionPage = () => {\n  const userInterface = document.getElementById(USER_INTERFACE_ID);\n  userInterface.innerHTML = '';\n\n  const currentQuestion = quizData.questions[quizData.currentQuestionIndex];\n  //Create our question element with our text\n  const questionElement = createQuestionElement(currentQuestion.text);\n\n  userInterface.appendChild(questionElement);\n\n  //Get our answerlist container which was created on questionView with ID\n  const answersListElement = document.getElementById(ANSWERS_LIST_ID);\n\n  //Animate our question and answerlist element\n  animateElements([questionElement, answersListElement]);\n\n  //Put every wrong answers in the wrongAnswers array\n  const wrongAnswers = [];\n\n  //Go through each answer element, append and add the relevant events\n  for (const [key, answerText] of Object.entries(currentQuestion.answers)) {\n    const answerElement = createAnswerElement(answerText);\n    answerElement.addEventListener('mouseover', (e) =>\n      e.target.classList.add('answer-options-hovering')\n    );\n    answerElement.addEventListener('mouseout', (e) =>\n      e.target.classList.remove('answer-options-hovering')\n    );\n    answersListElement.appendChild(answerElement);\n    answerElement.addEventListener(\n      'click',\n      answerClickHandler(key, answerElement)\n    );\n    // pushing wrong answers to the wrongAnswers array\n    if (key !== currentQuestion.correct) {\n      wrongAnswers.push(answerElement);\n    }\n  }\n\n  function answerClickHandler(key, answerEl) {\n    return (e) => {\n      currentQuestion.selected = key;\n      answerLogicHandler(e);\n      // remove the chosen options from wrongAnswers array\n      wrongAnswers.splice(wrongAnswers.indexOf(answerEl), 1);\n    };\n  }\n  //Add our hint handler to hint button click event\n  document\n    .getElementById(HINT_BUTTON_ID)\n    .addEventListener('click', hintHandler);\n\n  function hintHandler() {\n    // limit the function with wrongAnswers length to stop hint button working when no option to remove\n    if (wrongAnswers.length > 0) {\n      const randInd = Math.floor(Math.random() * wrongAnswers.length);\n      // selecting an to item to remove from answerListElement\n      const removedItem =\n        answersListElement.children[\n          [...answersListElement.children].indexOf(wrongAnswers[randInd])\n        ];\n      // remove the item from wrongAnswers also\n      wrongAnswers.splice(randInd, 1);\n      // adding class wrong to the item\n      removedItem.classList.add('answer-option-wrong');\n      // decrease 1 point for each time clicking to hint button\n      score.total -= 1;\n    }\n  }\n};\n\n//Check question for correct/wrong and do the relevant logic\nconst answerLogicHandler = (e) => {\n  const currentQuestion = quizData.questions[quizData.currentQuestionIndex];\n  //If correct answer is already selected prevent from continuing.\n  if (isCorrectAnswerSelected) return;\n  e.target.classList.remove('answer-options-hovering');\n  if (currentQuestion.selected === currentQuestion.correct) {\n    playCorrectQ();\n    e.target.classList.add('answer-option-correct');\n    addToCurrentScore(score.total);\n    //Reset our total score for next question\n    score.total = 3;\n    nextQuestion();\n  } else {\n    e.target.classList.add('answer-option-wrong');\n    //Subtract score at each wrong answer\n    score.total -= 1;\n  }\n  //Negative scores shouldn't be possible\n  if (score.total < 1) {\n    score.total = 0;\n  }\n};\n\n//Will call after delay 800ms\nconst delayNext = (callback) => {\n  //Global bool to help prevention of selections during the timeout\n  isCorrectAnswerSelected = true;\n  setTimeout(() => {\n    callback();\n    isCorrectAnswerSelected = false;\n  }, 800);\n};\n\nconst nextQuestion = () => {\n  quizData.currentQuestionIndex = quizData.currentQuestionIndex + 1;\n\n  //If reached 10 question, go to last page\n  if (quizData.currentQuestionIndex >= quizData.questionsToShow) {\n    delayNext(initLastPage);\n  } else {\n    //Function only comes here when correct answer is selected.\n    delayNext(initQuestionPage);\n    //Register next question in navbar\n    nextQuestionRegister();\n  }\n};\n","'use strict';\n\nimport { ANSWERS_LIST_ID } from '../constants.js';\n// import { NEXT_QUESTION_BUTTON_ID } from '../constants.js';\nimport { HINT_BUTTON_ID } from '../constants.js';\n\n/**\n * Create a full question element\n * @returns {Element}\n */\nexport const createQuestionElement = (question) => {\n  const element = document.createElement('div');\n\n  // I use String.raw just to get fancy colors for the HTML in VS Code.\n  element.innerHTML = String.raw`\n    <h1>${question}</h1>\n\n    <ul id=\"${ANSWERS_LIST_ID}\">\n    </ul>\n\n    <button class=\"btn-primary\" id=\"${HINT_BUTTON_ID}\">\n      Hint\n    </button>\n  `;\n\n  return element;\n};\n","'use strict';\n\nimport { initInfoUI, nextQuestionRegister, starterNavUI } from '../components/navbar.js';\nimport { USER_INTERFACE_ID, START_QUIZ_BUTTON_ID } from '../constants.js';\nimport { shuffleQuestions } from '../data.js';\nimport { createWelcomeElement } from '../views/welcomeView.js';\nimport { initQuestionPage } from './questionPage.js';\nimport { addFortune } from '../views/lastView.js';\n\n/**\n * Initialize our welcome page\n * @returns {undefined}\n */\nexport const initWelcomePage = () => {\n  starterNavUI();\n  const userInterface = document.getElementById(USER_INTERFACE_ID);\n  userInterface.innerHTML = '';\n\n  //Make fortune img for welcome page\n  const fortune = addFortune();\n  const welcomeElement = createWelcomeElement();\n  userInterface.appendChild(fortune);\n  userInterface.appendChild(welcomeElement);\n\n  document\n    .getElementById(START_QUIZ_BUTTON_ID)\n    .addEventListener('click', startQuiz);\n};\n\nconst startQuiz = () => {\n\n  shuffleQuestions();\n  nextQuestionRegister();\n  initQuestionPage();\n  initInfoUI();\n};\n","'use strict';\n\nimport { quizData } from './data.js';\nimport { initWelcomePage } from './pages/welcomePage.js';\nimport { initQuestionPage } from './pages/questionPage.js';\nimport {\n  clearIntervals,\n  initInfoUI,\n  setDataNavbar,\n} from './components/navbar.js';\nimport { initLastPage } from './pages/lastPage.js';\n\n//Window script to offload localStorage\nwindow.offloadStorage = () => {\n  clearIntervals();\n  localStorage.clear();\n};\n\n//Window script to limit questions to ask\nwindow.limitQuestionTo = (val) => {\n  quizData.questionsToShow = val;\n};\n\nconst loadApp = () => {\n  //Put memorized data to quizData at refresh.\n  if (localStorage.getItem('currentIndex') !== null) {\n    const list = JSON.parse(localStorage.getItem('questionList'));\n    quizData.currentQuestionIndex = parseInt(\n      localStorage.getItem('currentIndex'),\n      10\n    );\n    quizData.questions = list;\n\n    const navDataStored = JSON.parse(localStorage.getItem('navData'));\n    setDataNavbar(navDataStored);\n\n    initInfoUI();\n    //Last page logic\n    if (quizData.currentQuestionIndex >= quizData.questionsToShow) {\n      initLastPage();\n    } else {\n      initQuestionPage();\n    }\n    //if currentIndex is null, that means we go to welcome page\n  } else {\n    quizData.currentQuestionIndex = 0;\n    initWelcomePage();\n  }\n};\n\nwindow.addEventListener('load', loadApp);\n"],"names":["$55735a5f4182b47c$var$intervalPlaceholder","$55735a5f4182b47c$var$intervalMethod","el","opacity","parseFloat","style","clearInterval","$95d0977e6dbb0c2a$var$infoUI","document","getElementById","$95d0977e6dbb0c2a$var$timerDisplay","querySelector","$95d0977e6dbb0c2a$var$questionDisplay","$95d0977e6dbb0c2a$var$scoreDisplay","$95d0977e6dbb0c2a$var$timerCounter","$95d0977e6dbb0c2a$var$navData","mins","secs","score","qCurrent","qMax","$3ESMo","quizData","questionsToShow","$95d0977e6dbb0c2a$var$getTimeFormatted","toString","padStart","$95d0977e6dbb0c2a$export$3c6fa4c7dc66389e","$95d0977e6dbb0c2a$export$f13e5749b6ddf7c5","forEach","item","idx","children","textContent","setInterval","$95d0977e6dbb0c2a$export$a5a846ed4d858e01","localStorage","setItem","$95d0977e6dbb0c2a$export$f0e7ab257637f8ba","amount","innerHTML","String","raw","setTimeout","$95d0977e6dbb0c2a$export$607624ec0d752052","$95d0977e6dbb0c2a$export$ea934c7e692e3d91","data","Object","keys","key","window","addEventListener","getItem","JSON","stringify","$4cb2024fe4d541b0$export$d8a244b833422100","answerText","element","createElement","classList","add","$8c136a0385fd59bd$export$e55b6242cf16bbb8","question","total","finalScore","$8c136a0385fd59bd$export$9930cece47b3684f","endScore","timeGiven","Math","floor","$8c136a0385fd59bd$export$c4fe0e2a2ee3ae2b","fortune","selected","rndInt","random","bad","medium","good","$8c136a0385fd59bd$export$41d5caa83b7d52a9","$af8e1a23ea395d74$export$74663cd9ed528d79","$c43b523ce522928a$var$intervalPlaceHolder","$c43b523ce522928a$export$d62596838d141577","els","target","changeBy","suffix","elementStyle","$2f0b425a7cda73ca$var$userInterface","$2f0b425a7cda73ca$export$f0806b4fe727587c","currentQuestionIndex","scoreElement","$af8e1a23ea395d74$export$a03d6732e48b28b3","yourFortune","lastElement","$af8e1a23ea395d74$export$fcebb95eb236b22d","accordionToggleDiv","parent","appendChild","$af8e1a23ea395d74$export$efa56586a5d853d8","qaList","questions","liElement","text","answers","correct","$af8e1a23ea395d74$export$3ca62658ba11662c","footer","$af8e1a23ea395d74$export$7c88f7b87167f6","$2f0b425a7cda73ca$var$restartQuiz","$2f0b425a7cda73ca$var$accordionToggled","maxHeight","scrollHeight","clear","map","q","$d5c0ccc7a8326140$export$41f4d9af8988703c","$4199b1b1ad42140d$var$sounds","Audio","bgMusic","volume","$4199b1b1ad42140d$var$soundIconElement","$4199b1b1ad42140d$export$91946dd086b2206f","what","src","$4199b1b1ad42140d$export$4de117e7557f5f22","vol","this","currentTime","play","$4199b1b1ad42140d$export$c674b5d6df753e42","pause","$7633d6791d13ebb5$var$isCorrectAnswerSelected","$7633d6791d13ebb5$export$3be58eb5695ba4d0","userInterface","currentQuestion","questionElement","$896804332e3190eb$export$35f6b45119b62fc9","answersListElement","wrongAnswers","key1","entries","answerElement","e","remove","answerClickHandler","push","answerEl","$7633d6791d13ebb5$var$answerLogicHandler","splice","indexOf","length","randInd","removedItem","$7633d6791d13ebb5$var$nextQuestion","$7633d6791d13ebb5$var$delayNext","callback","welcomeElement","$fd48f5a92d7df60b$export$3a456faefdfebd69","$d5c0ccc7a8326140$var$startQuiz","shuffleQuestions","offloadStorage","limitQuestionTo","val","list","parse","parseInt","navDataStored"],"version":3,"file":"index.328225f1.js.map"}